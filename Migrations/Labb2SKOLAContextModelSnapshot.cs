// <auto-generated />
using System;
using Labb3DB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb3DB.Migrations
{
    [DbContext(typeof(Labb2SKOLAContext))]
    partial class Labb2SKOLAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb3DB.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ClassId")
                        .HasName("PK_Klasser");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Labb3DB.Models.ClassStudent", b =>
                {
                    b.Property<int>("FkclassId")
                        .HasColumnType("int")
                        .HasColumnName("FKClassID");

                    b.Property<int>("FkstudentId")
                        .HasColumnType("int")
                        .HasColumnName("FKStudentID");

                    b.HasIndex("FkclassId");

                    b.HasIndex("FkstudentId");

                    b.ToTable("ClassStudents");
                });

            modelBuilder.Entity("Labb3DB.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Labb3DB.Models.EmployeeProfession", b =>
                {
                    b.Property<int>("FkemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FKEmployeeID");

                    b.Property<int>("FkprofessionTitleId")
                        .HasColumnType("int")
                        .HasColumnName("FKProfessionTitleID");

                    b.HasIndex("FkemployeeId");

                    b.HasIndex("FkprofessionTitleId");

                    b.ToTable("EmployeeProfessions", (string)null);
                });

            modelBuilder.Entity("Labb3DB.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EnrollmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("FkemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FKEmployeeID");

                    b.Property<int>("FkstudentId")
                        .HasColumnType("int")
                        .HasColumnName("FKStudentID");

                    b.Property<int>("FksubjectId")
                        .HasColumnType("int")
                        .HasColumnName("FKSubjectID");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("FkemployeeId");

                    b.HasIndex("FkstudentId");

                    b.HasIndex("FksubjectId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("Labb3DB.Models.Profession", b =>
                {
                    b.Property<int>("ProfessionTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProfessionTitleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessionTitleId"));

                    b.Property<string>("ProfessionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProfessionTitleId")
                        .HasName("PK_Roller");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("Labb3DB.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("StudentId")
                        .HasName("PK_Elever");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Labb3DB.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<int>("FkemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FKEmployeeID");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("SubjectId");

                    b.HasIndex("FkemployeeId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Labb3DB.Models.ClassStudent", b =>
                {
                    b.HasOne("Labb3DB.Models.Class", "Fkclass")
                        .WithMany()
                        .HasForeignKey("FkclassId")
                        .IsRequired()
                        .HasConstraintName("FK_ClassStudents_Classes");

                    b.HasOne("Labb3DB.Models.Student", "Fkstudent")
                        .WithMany()
                        .HasForeignKey("FkstudentId")
                        .IsRequired()
                        .HasConstraintName("FK_ClassStudents_Students");

                    b.Navigation("Fkclass");

                    b.Navigation("Fkstudent");
                });

            modelBuilder.Entity("Labb3DB.Models.EmployeeProfession", b =>
                {
                    b.HasOne("Labb3DB.Models.Employee", "Fkemployee")
                        .WithMany()
                        .HasForeignKey("FkemployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeProfessions_Employees");

                    b.HasOne("Labb3DB.Models.Profession", "FkprofessionTitle")
                        .WithMany()
                        .HasForeignKey("FkprofessionTitleId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeProfessions_Professions");

                    b.Navigation("Fkemployee");

                    b.Navigation("FkprofessionTitle");
                });

            modelBuilder.Entity("Labb3DB.Models.Enrollment", b =>
                {
                    b.HasOne("Labb3DB.Models.Employee", "Fkemployee")
                        .WithMany("Enrollments")
                        .HasForeignKey("FkemployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_Enrollments_Employees");

                    b.HasOne("Labb3DB.Models.Student", "Fkstudent")
                        .WithMany("Enrollments")
                        .HasForeignKey("FkstudentId")
                        .IsRequired()
                        .HasConstraintName("FK_Enrollments_Students");

                    b.HasOne("Labb3DB.Models.Subject", "Fksubject")
                        .WithMany("Enrollments")
                        .HasForeignKey("FksubjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Enrollments_Subjects");

                    b.Navigation("Fkemployee");

                    b.Navigation("Fkstudent");

                    b.Navigation("Fksubject");
                });

            modelBuilder.Entity("Labb3DB.Models.Subject", b =>
                {
                    b.HasOne("Labb3DB.Models.Employee", "Fkemployee")
                        .WithMany("Subjects")
                        .HasForeignKey("FkemployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_Subjects_Employees");

                    b.Navigation("Fkemployee");
                });

            modelBuilder.Entity("Labb3DB.Models.Employee", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Labb3DB.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Labb3DB.Models.Subject", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
